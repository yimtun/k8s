pod  状态  容器状态  分开

多个容器  一个容器 有问题  其他正常    pod  running   不要认为 pod   running  容器就是  ready

init container 实际 用的不多    可以在 容器里实现 docker init 类似于 系统的  systemd

docker  init  也不是官方推荐的   早期应用容器  很多agent  一时不能 移除容器    富容器  不但业务容器  还有很多其他的初始类的程序

满足业务的适配 折中的办法



pod 计算资源管理  



09:50
成本计算  按月的话    每个业务线  总CPU  数 总内存数       划算为成本    以前  服务器 的成本 


虽然后  QOS 但是 因为是  容器   idle 的统计周期  1秒  或者 十秒统计一次  计算 十秒的 最大值或者最小值

即使是   1秒  在1秒的 时间段里面 有可能有很多的抖动  只不过是 采集周期没有体现出来而已 ticker 

一秒的采集周期  对于CPU 来说还是很长  

查 CPU  idle  并不抖动严重  但是业务 程序不对 有延迟  需要通过内核 发现 更底层的 cpu 采样   和 度量  ????



裸跑的 pod 没有被人管理  但是 pod 还是它下面 的  管理容器  容器  rm  stop  pod 会把它启动 



service  LB 公有云       clusterip 默认的 基本的           

kube-proxy   设置成local 比如  只 转发本地



修改 service kube-proxy  拓扑 更强大






ingress  https 承担  tls  终止




发布更新   probe  

实际应用中 可以 就绪  存活两个探针 设置成一样的  业务也省事

c++  java  程序coredump  但是 容器还在运行  流量正常接入  


















