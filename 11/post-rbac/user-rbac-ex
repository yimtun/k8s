创建role

kubectl  config  use-context  kubernetes

kubectl  get role  --all-namespaces   | grep user-role
[root@master01 ~]# 




cat > user-role.yaml << EOF
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: user-role
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  #resourceNames: ["my-pod"]
  verbs: ["get", "watch", "list"]
EOF

kubectl  create  -f  user-role.yaml


创建rolebinding

kubectl create rolebinding read-pods-user --role=user-role  --user=bmw --namespace=default


kubectl  -n default  get rolebindings.rbac.authorization.k8s.io  read-pods-user -o yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: 2019-05-21T07:11:44Z
  name: read-pods-user
  namespace: default
  resourceVersion: "3231978"
  selfLink: /apis/rbac.authorization.k8s.io/v1/namespaces/default/rolebindings/read-pods-user
  uid: b0bd8258-7b97-11e9-9cf2-5254003d139c
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: user-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: bmw






通过证书创建爱你user   bmw

就像 配置kubectl 使用的 admin 用户一样


创建csr

mkdir /bmw
cd /bmw

cat > bmw-csr.json <<EOF
{
  "CN": "bmw",
  "hosts": [],
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "CN",
      "ST": "BeiJing",
      "L": "BeiJing",
      "O": "k8s",
      "OU": "bmwx4"
    }
  ]
}
EOF

k8s 从 csr  中的CN 字段获取 username 从 O 获取groupname





生成客户端证书和私钥

cfssl gencert -ca=/etc/kubernetes/cert/ca.pem \
  -ca-key=/etc/kubernetes/cert/ca-key.pem \
  -config=/etc/kubernetes/cert/ca-config.json \
  -profile=kubernetes bmw-csr.json | cfssljson -bare bmw




ls bmw*
bmw.csr  bmw-csr.json  bmw-key.pem  bmw.pem



cfssl-certinfo -cert bmw.pem



创建 bmw 用户的 kubeconfig 文件




设置cluster

export MASTER_VIP=192.168.10.232
export KUBE_APISERVER="https://${MASTER_VIP}:6443"
kubectl config set-cluster kubernetes \
  --certificate-authority=/etc/kubernetes/cert/ca.pem \
  --embed-certs=true \
  --server=${KUBE_APISERVER} \
  --kubeconfig=bmw.kubeconfig


ls /bmw/bmw.kubeconfig 
/bmw/bmw.kubeconfig


cat /bmw/bmw.kubeconfig 

cat /bmw/bmw.kubeconfig 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR4RENDQXF5Z0F3SUJBZ0lVUkQ4Q2lJVW9kb1BHNXliQURDOTBKRHJlazNBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FERUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVTTUJBR0ExVUVDeE1KTkZCaGNtRmthV2R0TVJNd0VRWURWUVFECkV3cHJkV0psY201bGRHVnpNQjRYRFRFNU1EUXhPREE1TlRRd01Gb1hEVEkwTURReE5qQTVOVFF3TUZvd2FERUwKTUFrR0ExVUVCaE1DUTA0eEVEQU9CZ05WQkFnVEIwSmxhVXBwYm1jeEVEQU9CZ05WQkFjVEIwSmxhVXBwYm1jeApEREFLQmdOVkJBb1RBMnM0Y3pFU01CQUdBMVVFQ3hNSk5GQmhjbUZrYVdkdE1STXdFUVlEVlFRREV3cHJkV0psCmNtNWxkR1Z6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1YlpWcTcyMkdXeXoKS28zenFYQW4ybjVXeWRzcWVrRGRxcjhuSDBma2VzTDh5WjZGOUZJWFFEcGN2eFlYaHJnNWp4ay9IdmpCNVRJZQptbS9SU1lSY1k2Z0UvbmkrVXU3aHpiRm9VcjdKb0h0MUoyb1lIUk5Yc0ZHTkRNV2J5RWphb21LQWlMRytRcVpRCnRmcnk0UW52NS9rTXc2NktRYjlIbDJobm80V24yQytKcjhweFpoQTkvQTE1YXp2aVlFVHFWTWk3Nkp2dmd3ZVgKZ2ZFYWZGbmVLOEd2MGZmTWZENi84NzFGc3BJU1lCdzVzTTdQUy9WRFY5WG9xUWhRUmtxTW5TRnEwdklXWmp2dwpjc0Q2Y1RvTGl4dEdETEthR0UvM3I5Q283dFpZaiszUVJYMTkwck1waFIyQWM3dWZUMjVLMnRBMEJlaTNMeUpoCjgvTVR2azhhcXdJREFRQUJvMll3WkRBT0JnTlZIUThCQWY4RUJBTUNBUVl3RWdZRFZSMFRBUUgvQkFnd0JnRUIKL3dJQkFqQWRCZ05WSFE0RUZnUVVvTkF3ZzJnUmxDTWkwUUxHWlBqdkdHelFIZDh3SHdZRFZSMGpCQmd3Rm9BVQpvTkF3ZzJnUmxDTWkwUUxHWlBqdkdHelFIZDh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdDQkp3dkp4UUpJCmQrYk9ib09pQlB0T3dmamdIUFdkMGhkazgrL1lGVmtYNzJIbk1jaUdzdVpXeFFXYnlvdG11eCsxbWJsL253L2oKb0JtTDNYNUd2bHNhK3VraVc0ay81a0Ixd1dkRGlvRmc1bGtxbktrckRkd0UwNjMzMnBtblU1ZVVaT0xjam1qdwpCNVJNNG9TNC9oWDYzNzU1N0RMN0loSjNxQzVPbW5TazVaZ3pKcVh0R2FkSHdQTGY0akVaNHpXSityRnVnYTArCk03b0JReWJFcENaa0VqZ2VzTG5DMlJrRUFaTUpHcWl5SlAydEEzVVBUTkgzeHNNbW9LSzl5MkdQMXg0U0hZTmYKQWNZM2xWZm1kUllobWJva01sZFdUTllSbWpndWVmRFV0Zk5xc0o3YnhueWxrdEV2TXBTZE9PVVNRWVo0T2Rxdwp2Ymg5dFVVcmdCQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://192.168.10.232:6443
  name: kubernetes
contexts: []
current-context: ""
kind: Config
preferences: {}
users: []


contexts 空  user 空 current-context 空





设置客户端认证参数  添加user 

kubectl config set-credentials bmw \
  --client-certificate=bmw.pem \
  --client-key=bmw-key.pem \
  --embed-certs=true \
  --kubeconfig=bmw.kubeconfig


cat /bmw/bmw.kubeconfig
preferences: {}
users:
- name: bmw
  user:



设置context  将集群和用户关联

kubectl config set-context bmw \
  --cluster=kubernetes \
  --user=bmw \
  --kubeconfig=bmw.kubeconfig

cat /bmw/bmw.kubeconfig

contexts:
- context:
    cluster: kubernetes
    user: bmw
  name: bmw


设置默认上下文  添加 current-context

kubectl config use-context bmw --kubeconfig=bmw.kubeconfig


grep  current-context  /bmw/bmw.kubeconfig 
current-context: bmw


当使用 /bmw/bmw.kubeconfig 时 默认使用 bmw  context


通过指定 kubeconfig  文件 来切换context

kubectl get pod --kubeconfig=bmw.kubeconfig 
NAME                       READY   STATUS    RESTARTS   AGE
limit-pod                  1/1     Running   0          3d16h
my-nginx-c56566c77-drv6t   1/1     Running   0          2d17h
my-nginx-c56566c77-s67p9   1/1     Running   0          2d16h
nginx                      1/1     Running   0          2d16h
nginx-static-pv-test       1/1     Running   0          2d1h
web-sts-0                  1/1     Running   0          2d
web-sts-1                  1/1     Running   0          2d



kubectl get secrets  --kubeconfig=bmw.kubeconfig 
Error from server (Forbidden): secrets is forbidden: User "bmw" cannot list resource "secrets" in API group "" in the namespace "default"


kubectl delete pod  limit-pod   --kubeconfig=bmw.kubeconfig 
Error from server (Forbidden): pods "limit-pod" is forbidden: User "bmw" cannot delete resource "pods" in API group "" in the namespace "default"


kubectl get secrets --kubeconfig=/root/.kube/config 
NAME                  TYPE                                  DATA   AGE
bmw-token-69gwm       kubernetes.io/service-account-token   3      3h33m
ceph-admin-secret     kubernetes.io/rbd                     1      2d3h
ceph-bmw-secret       kubernetes.io/rbd                     1      2d3h
default-token-k5zqn   kubernetes.io/service-account-token   3      31d





客户端使用
user 的证书 访问 api  证书里面包含user 和key 

客户端使用
serviceaccount 的  user(serviceaccount name) token 调用 api 









































