创建role

kubectl get roles.rbac.authorization.k8s.io    --all-namespaces   | grep pod-reader
default         pod-reader    


kubectl  -n default  delete roles.rbac.authorization.k8s.io  pod-reader 




cat > pod-reader-role.yaml << EOF
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  #resourceNames: ["my-pod"]
  verbs: ["get", "watch", "list"]
EOF

kubectl  create  -f pod-reader-role.yaml 







创建一个 serviceaccount 用户
kubectl  get serviceaccounts  --all-namespaces   | grep bmw



kubectl  -n default create  serviceaccount  bmw

kubectl  -n default get   serviceaccount  bmw  -o yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: 2019-05-21T04:06:33Z
  name: bmw
  namespace: default
  resourceVersion: "3216068"
  selfLink: /api/v1/namespaces/default/serviceaccounts/bmw
  uid: d1dda816-7b7d-11e9-9cf2-5254003d139c
secrets:
- name: bmw-token-69gwm


查看secrets
bmw-token-69gwm

kubectl  -n default  get secrets  bmw-token-69gwm  -o yaml

kubectl  -n default  get secrets  bmw-token-69gwm  -o yaml
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR4RENDQXF5Z0F3SUJBZ0lVUkQ4Q2lJVW9kb1BHNXliQURDOTBKRHJlazNBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FERUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVTTUJBR0ExVUVDeE1KTkZCaGNtRmthV2R0TVJNd0VRWURWUVFECkV3cHJkV0psY201bGRHVnpNQjRYRFRFNU1EUXhPREE1TlRRd01Gb1hEVEkwTURReE5qQTVOVFF3TUZvd2FERUwKTUFrR0ExVUVCaE1DUTA0eEVEQU9CZ05WQkFnVEIwSmxhVXBwYm1jeEVEQU9CZ05WQkFjVEIwSmxhVXBwYm1jeApEREFLQmdOVkJBb1RBMnM0Y3pFU01CQUdBMVVFQ3hNSk5GQmhjbUZrYVdkdE1STXdFUVlEVlFRREV3cHJkV0psCmNtNWxkR1Z6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1YlpWcTcyMkdXeXoKS28zenFYQW4ybjVXeWRzcWVrRGRxcjhuSDBma2VzTDh5WjZGOUZJWFFEcGN2eFlYaHJnNWp4ay9IdmpCNVRJZQptbS9SU1lSY1k2Z0UvbmkrVXU3aHpiRm9VcjdKb0h0MUoyb1lIUk5Yc0ZHTkRNV2J5RWphb21LQWlMRytRcVpRCnRmcnk0UW52NS9rTXc2NktRYjlIbDJobm80V24yQytKcjhweFpoQTkvQTE1YXp2aVlFVHFWTWk3Nkp2dmd3ZVgKZ2ZFYWZGbmVLOEd2MGZmTWZENi84NzFGc3BJU1lCdzVzTTdQUy9WRFY5WG9xUWhRUmtxTW5TRnEwdklXWmp2dwpjc0Q2Y1RvTGl4dEdETEthR0UvM3I5Q283dFpZaiszUVJYMTkwck1waFIyQWM3dWZUMjVLMnRBMEJlaTNMeUpoCjgvTVR2azhhcXdJREFRQUJvMll3WkRBT0JnTlZIUThCQWY4RUJBTUNBUVl3RWdZRFZSMFRBUUgvQkFnd0JnRUIKL3dJQkFqQWRCZ05WSFE0RUZnUVVvTkF3ZzJnUmxDTWkwUUxHWlBqdkdHelFIZDh3SHdZRFZSMGpCQmd3Rm9BVQpvTkF3ZzJnUmxDTWkwUUxHWlBqdkdHelFIZDh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdDQkp3dkp4UUpJCmQrYk9ib09pQlB0T3dmamdIUFdkMGhkazgrL1lGVmtYNzJIbk1jaUdzdVpXeFFXYnlvdG11eCsxbWJsL253L2oKb0JtTDNYNUd2bHNhK3VraVc0ay81a0Ixd1dkRGlvRmc1bGtxbktrckRkd0UwNjMzMnBtblU1ZVVaT0xjam1qdwpCNVJNNG9TNC9oWDYzNzU1N0RMN0loSjNxQzVPbW5TazVaZ3pKcVh0R2FkSHdQTGY0akVaNHpXSityRnVnYTArCk03b0JReWJFcENaa0VqZ2VzTG5DMlJrRUFaTUpHcWl5SlAydEEzVVBUTkgzeHNNbW9LSzl5MkdQMXg0U0hZTmYKQWNZM2xWZm1kUllobWJva01sZFdUTllSbWpndWVmRFV0Zk5xc0o3YnhueWxrdEV2TXBTZE9PVVNRWVo0T2Rxdwp2Ymg5dFVVcmdCQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: ZGVmYXVsdA==
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WldOeVpYUXVibUZ0WlNJNkltSnRkeTEwYjJ0bGJpMDJPV2QzYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWJYY2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmtNV1JrWVRneE5pMDNZamRrTFRFeFpUa3RPV05tTWkwMU1qVTBNREF6WkRFek9XTWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdWbVlYVnNkRHBpYlhjaWZRLldmVW5oSm52X0k4aUpHa1pFQTUycmpHN0czdGQzeEZMdElvbkE3MUxtUkxUR3QydFo2ZkltZXF5QnRaRWVTYmJWby1ObkplclZ5ZkVGYmhVWkN6THRORGxyTGFZM3lMbmJqdWVYaXl0UkxDaXNKbmFweWZvZkhhUThqVzJGU0pxTHlDY0hGemRLcHZIc0ZJUXkyZC1MbEltZWM3dzM5QXFnVEM4V3pPQ1BWRGtjSENTMzdlS082TnlQSDBZc3VpQjJSMGZFd1l2VGMtZ1p0N3FZWFp1TTVhSkw1OXR1cGJhT1lma2c0aWtIV1pLTDhzU2stem5zaWtUejlFSzZPTF84ckhBd2R3Q0hEdUlMQkJkMFhCUDZUcmc2R2dCd2RzYzgtcDBZM3QwYWNjd19TSFAtcXBtTld4ZHA3eDlJZmtvb0NpT2cwWTVrYklCcWQ4b21BbkNmQQ==
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: bmw
    kubernetes.io/service-account.uid: d1dda816-7b7d-11e9-9cf2-5254003d139c
  creationTimestamp: 2019-05-21T04:06:33Z
  name: bmw-token-69gwm
  namespace: default
  resourceVersion: "3216067"
  selfLink: /api/v1/namespaces/default/secrets/bmw-token-69gwm
  uid: d1e04ddd-7b7d-11e9-9cf2-5254003d139c
type: kubernetes.io/service-account-token




可以使用里面的secrets 里的token 访问api
配置 kubeconfig 也会用到这个token


创建 rolebinding

kubectl  -n default delete  rolebindings.rbac.authorization.k8s.io   read-pods-svc


cat > rolebinding.yaml << EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods-svc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: bmw
  namespace: default
EOF


kubectl  create -f rolebinding.yaml








kubectl  -n default get rolebindings.rbac.authorization.k8s.io  read-pods-svc  -o yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: 2019-05-21T04:35:06Z
  name: read-pods-svc
  namespace: default
  resourceVersion: "3218528"
  selfLink: /apis/rbac.authorization.k8s.io/v1/namespaces/default/rolebindings/read-pods-svc
  uid: ced6b20b-7b81-11e9-9cf2-5254003d139c
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: bmw
  namespace: default




删除 RoleBinding  使用命令行重新创建

kubectl  -n default  delete rolebindings.rbac.authorization.k8s.io  read-pods-svc

kubectl create rolebinding read-pods-svc --role=pod-reader --serviceaccount=default:bmw  --namespace=default


kubectl  -n default get rolebindings.rbac.authorization.k8s.io  read-pods-svc  -o yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: 2019-05-21T04:35:54Z
  name: read-pods-svc
  namespace: default
  resourceVersion: "3218600"
  selfLink: /apis/rbac.authorization.k8s.io/v1/namespaces/default/rolebindings/read-pods-svc
  uid: eba976af-7b81-11e9-9cf2-5254003d139c
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: bmw
  namespace: default




查看rolebinding

kubectl  -n default get rolebindings.rbac.authorization.k8s.io  read-pods-svc   -o wide
NAME            AGE   ROLE              USERS   GROUPS   SERVICEACCOUNTS
read-pods-svc   79s   Role/pod-reader                    default/bmw


验证

配置 kubeconfig

查看kubectl 当前config

kubectl   config  view 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://192.168.10.232:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: admin
  name: kubernetes
current-context: kubernetes
kind: Config
preferences: {}
users:
- name: admin
  user:
    client-certificate-data: REDACTED
    client-key-data: REDACTED




kubectl   config   get-contexts
CURRENT   NAME         CLUSTER      AUTHINFO   NAMESPACE
*         kubernetes   kubernetes   admin      


查找token

kubectl  -n default get secrets bmw-token-69gwm  -o yaml  | grep token
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WldOeVpYUXVibUZ0WlNJNkltSnRkeTEwYjJ0bGJpMDJPV2QzYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWJYY2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmtNV1JrWVRneE5pMDNZamRrTFRFeFpUa3RPV05tTWkwMU1qVTBNREF6WkRFek9XTWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdWbVlYVnNkRHBpYlhjaWZRLldmVW5oSm52X0k4aUpHa1pFQTUycmpHN0czdGQzeEZMdElvbkE3MUxtUkxUR3QydFo2ZkltZXF5QnRaRWVTYmJWby1ObkplclZ5ZkVGYmhVWkN6THRORGxyTGFZM3lMbmJqdWVYaXl0UkxDaXNKbmFweWZvZkhhUThqVzJGU0pxTHlDY0hGemRLcHZIc0ZJUXkyZC1MbEltZWM3dzM5QXFnVEM4V3pPQ1BWRGtjSENTMzdlS082TnlQSDBZc3VpQjJSMGZFd1l2VGMtZ1p0N3FZWFp1TTVhSkw1OXR1cGJhT1lma2c0aWtIV1pLTDhzU2stem5zaWtUejlFSzZPTF84ckhBd2R3Q0hEdUlMQkJkMFhCUDZUcmc2R2dCd2RzYzgtcDBZM3QwYWNjd19TSFAtcXBtTld4ZHA3eDlJZmtvb0NpT2cwWTVrYklCcWQ4b21BbkNmQQ==
  name: bmw-token-69gwm
  selfLink: /api/v1/namespaces/default/secrets/bmw-token-69gwm
type: kubernetes.io/service-account-token


echo -n 'ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WldOeVpYUXVibUZ0WlNJNkltSnRkeTEwYjJ0bGJpMDJPV2QzYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWJYY2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmtNV1JrWVRneE5pMDNZamRrTFRFeFpUa3RPV05tTWkwMU1qVTBNREF6WkRFek9XTWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdWbVlYVnNkRHBpYlhjaWZRLldmVW5oSm52X0k4aUpHa1pFQTUycmpHN0czdGQzeEZMdElvbkE3MUxtUkxUR3QydFo2ZkltZXF5QnRaRWVTYmJWby1ObkplclZ5ZkVGYmhVWkN6THRORGxyTGFZM3lMbmJqdWVYaXl0UkxDaXNKbmFweWZvZkhhUThqVzJGU0pxTHlDY0hGemRLcHZIc0ZJUXkyZC1MbEltZWM3dzM5QXFnVEM4V3pPQ1BWRGtjSENTMzdlS082TnlQSDBZc3VpQjJSMGZFd1l2VGMtZ1p0N3FZWFp1TTVhSkw1OXR1cGJhT1lma2c0aWtIV1pLTDhzU2stem5zaWtUejlFSzZPTF84ckhBd2R3Q0hEdUlMQkJkMFhCUDZUcmc2R2dCd2RzYzgtcDBZM3QwYWNjd19TSFAtcXBtTld4ZHA3eDlJZmtvb0NpT2cwWTVrYklCcWQ4b21BbkNmQQ==' |base64 -d



vim /root/.kube/config
- name: bmw
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImJtdy10b2tlbi02OWd3bSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJibXciLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJkMWRkYTgxNi03YjdkLTExZTktOWNmMi01MjU0MDAzZDEzOWMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDpibXcifQ.WfUnhJnv_I8iJGkZEA52rjG7G3td3xFLtIonA71LmRLTGt2tZ6fImeqyBtZEeSbbVo-NnJerVyfEFbhUZCzLtNDlrLaY3yLnbjueXiytRLCisJnapyfofHaQ8jW2FSJqLyCcHFzdKpvHsFIQy2d-LlImec7w39AqgTC8WzOCPVDkcHCS37eKO6NyPH0YsuiB2R0fEwYvTc-gZt7qYXZuM5aJL59tupbaOYfkg4ikHWZKL8sSk-znsikTz9EK6OL_8rHAwdwCHDuILBBd0XBP6Trg6GgBwdsc8-p0Y3t0accw_SHP-qpmNWxdp7x9IfkooCiOg0Y5kbIBqd8omAnCfA






根据context 切换使用哪个用户
访问的集群 cluster 没有变 不需要修改

添加context
vim /root/.kube/config

contexts:
- context:
    cluster: kubernetes
    user: admin
  name: kubernetes
- context:
    cluster: kubernetes
    user: bmw
  name: bmw


当使用名字为bmw 的context 时  使用的用户是bmw  连接的集群式 kubernates
用户bmw 是在上一步定义的 


查看所有context
kubectl   config   get-contexts
CURRENT   NAME         CLUSTER      AUTHINFO   NAMESPACE
          bmw          kubernetes   bmw        
*         kubernetes   kubernetes   admin      



查看当前contex
kubectl  config current-context 
kubernetes

切换到bmw context

kubectl  config  use-context  bmw 
Switched to context "bmw".
[root@master01 ~]# kubectl  config current-context 
bmw


kubectl  get pod
error: the server doesn't have a resource type "pod"

需要对secret   bmw-token-69gwm  中的token 进行base64 解码

kubectl  get pod
NAME                       READY   STATUS    RESTARTS   AGE
limit-pod                  1/1     Running   0          3d15h
my-nginx-c56566c77-drv6t   1/1     Running   0          2d16h
my-nginx-c56566c77-s67p9   1/1     Running   0          2d15h
nginx                      1/1     Running   0          2d15h
nginx-static-pv-test       1/1     Running   0          2d
web-sts-0                  1/1     Running   0          47h
web-sts-1                  1/1     Running   0          47h




kubectl   get sts
Error from server (Forbidden): statefulsets.apps is forbidden: User "system:serviceaccount:default:bmw" cannot list resource "statefulsets" in API group "apps" in the namespace "default"


kubectl  get secrets
Error from server (Forbidden): secrets is forbidden: User "system:serviceaccount:default:bmw" cannot list resource "secrets" in API group "" in the namespace "default"



切回到 kubernetes context


kubectl  config  use-context  kubernetes 


修改 role  分配给相应的权限

kubectl  get role
NAME         AGE
pod-reader   136m


kubectl   -n default  edit  role   pod-reader
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: 2019-05-21T04:30:11Z
  name: pod-reader
  namespace: default
  resourceVersion: "3218103"
  selfLink: /apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/pod-reader
  uid: 1efb6bb0-7b81-11e9-9cf2-5254003d139c
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list



apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: 2019-05-21T04:30:11Z
  name: pod-reader
  namespace: default
  resourceVersion: "3218103"
  selfLink: /apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/pod-reader
  uid: 1efb6bb0-7b81-11e9-9cf2-5254003d139c
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  - pods/log
  - pods/exec
  verbs:
  - get
  - watch
  - list



kubectl  config  use-context bmw 

kubectl  logs  limit-pod

kubectl  exec  -it limit-pod  bash
Error from server (Forbidden): pods "limit-pod" is forbidden: User "system:serviceaccount:default:bmw" cannot create resource "pods/exec" in API group "" in the namespace "default"




- pods/exec  需要一个动作 verb  create

再次修改 role

切换

 kubectl  config  use-context  kubernetes 

修改

kubectl   -n default  edit  role   pod-reader 

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: 2019-05-21T04:30:11Z
  name: pod-reader
  namespace: default
  resourceVersion: "3230330"
  selfLink: /apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/pod-reader
  uid: 1efb6bb0-7b81-11e9-9cf2-5254003d139c
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  - pods/log
  - pods/exec
  verbs:
  - get
  - watch
  - list
  - create



kubectl  config  use-context  bmw 

kubectl  exec  -it limit-pod  ls
bin   dev   etc   home  proc  root  sys   tmp   usr   var




kubectl  exec  -it limit-pod  sh
/ # 



















































































